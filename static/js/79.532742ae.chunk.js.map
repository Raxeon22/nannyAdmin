{"version":3,"sources":["views/pages/authentication/ResetPassword.js","../node_modules/reactstrap/es/InputGroupText.js","../node_modules/reactstrap/es/InputGroupAddon.js","../node_modules/reactstrap/es/InputGroup.js","../node_modules/reactstrap/es/Input.js","@core/components/input-password-toggle/index.js"],"names":["ResetPasswordV2","useSkin","skin","illustration","source","require","default","className","to","onClick","e","preventDefault","src","Logo","width","height","alt","lg","sm","md","tag","onSubmit","for","id","autoFocus","Ripple","color","block","size","propTypes","tagPropType","PropTypes","string","cssModule","object","InputGroupText","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","addonType","oneOf","isRequired","children","node","InputGroupAddon","InputGroup","type","oneOfType","number","bsSize","valid","bool","invalid","innerRef","func","plaintext","addon","Input","_React$Component","_this","call","this","getRef","bind","_assertThisInitialized","focus","_inheritsLoose","_proto","prototype","ref","render","_this$props","checkInput","indexOf","isNotaNumber","RegExp","formControlClass","test","warnOnce","Component","InputPasswordToggle","label","hideIcon","showIcon","visible","htmlFor","placeholder","iconSize","inputClassName","rest","useState","inputVisibility","setInputVisibility","classnames","renderIcon"],"mappings":"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","file":"static/js/79.532742ae.chunk.js","sourcesContent":["import { useSkin } from '@hooks/useSkin'\nimport { Link } from 'react-router-dom'\nimport { ChevronLeft } from 'react-feather'\nimport InputPassword from '@components/input-password-toggle'\nimport { Row, Col, CardTitle, CardText, Form, FormGroup, Label, Button, Spinner } from 'reactstrap'\nimport '@styles/base/pages/page-auth.scss'\nimport Logo from '../../../../src/assets/images/logo/logo2.png'\n\n\nconst ResetPasswordV2 = () => {\n  const [skin, setSkin] = useSkin()\n\n  const illustration = skin === 'dark' ? 'reset-password-v2-dark.svg' : 'reset-password-v2.svg',\n    source = require(`@src/assets/images/pages/${illustration}`).default\n\n  return (\n    <div className='auth-wrapper auth-v2'>\n      <Row className='auth-inner m-0'>\n        <Link className='brand-logo' to='/' onClick={e => e.preventDefault()}>\n        <img src={Logo} width=\"100%\" height=\"auto\" alt=\"\"/>\n\n        </Link>\n        <Col className='d-none d-lg-flex align-items-center p-5' lg='8' sm='12'>\n          <div className='w-100 d-lg-flex align-items-center justify-content-center px-5'>\n            <img className='img-fluid' src={source} alt='Login V2' />\n          </div>\n        </Col>\n        <Col className='d-flex align-items-center auth-bg px-2 p-lg-5' lg='4' sm='12'>\n          <Col className='px-xl-2 mx-auto' sm='8' md='6' lg='12'>\n            <CardTitle tag='h2' className='font-weight-bold mb-1'>\n              Reset Password ðŸ”’\n            </CardTitle>\n            <CardText className='mb-2'>Your new password must be different from previously used passwords</CardText>\n            <Form className='auth-reset-password-form mt-2' onSubmit={e => e.preventDefault()}>\n              <FormGroup>\n                <Label className='form-label' for='new-password'>\n                 New Password\n                </Label>\n                <InputPassword className='input-group-merge' id='new-password' autoFocus />\n              </FormGroup>\n              <FormGroup>\n                <Label className='form-label' for='confirm-password'>\n                  Confirm Password\n                </Label>\n                <InputPassword className='input-group-merge' id='confirm-password' />\n              </FormGroup>\n              <Link to='/'>\n              <Button.Ripple color='primary' block>\n                Set New Password\n                {/* spinner */}\n                {/* <Spinner color='light' /> */}\n              </Button.Ripple>\n              </Link>\n            </Form>\n            <p className='text-center mt-2'>\n              <Link to='/otp'>\n                <ChevronLeft className='mr-25' size={14} />\n                <span className='align-middle'>Back to Otp</span>\n              </Link>\n            </p>\n          </Col>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default ResetPasswordV2\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'span'\n};\n\nvar InputGroupText = function InputGroupText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroupText.propTypes = propTypes;\nInputGroupText.defaultProps = defaultProps;\nexport default InputGroupText;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nimport InputGroupText from './InputGroupText';\nvar propTypes = {\n  tag: tagPropType,\n  addonType: PropTypes.oneOf(['prepend', 'append']).isRequired,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroupAddon = function InputGroupAddon(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      addonType = props.addonType,\n      children = props.children,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"addonType\", \"children\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group-' + addonType), cssModule); // Convenience to assist with transition\n\n  if (typeof children === 'string') {\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      className: classes\n    }), /*#__PURE__*/React.createElement(InputGroupText, {\n      children: children\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    children: children\n  }));\n};\n\nInputGroupAddon.propTypes = propTypes;\nInputGroupAddon.defaultProps = defaultProps;\nexport default InputGroupAddon;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  size: PropTypes.string,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar InputGroup = function InputGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      size = props.size,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\", \"size\"]);\n\n  var classes = mapToCssModules(classNames(className, 'input-group', size ? \"input-group-\" + size : null), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nInputGroup.propTypes = propTypes;\nInputGroup.defaultProps = defaultProps;\nexport default InputGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\n/* eslint react/prefer-stateless-function: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"]);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var rangeInput = type === 'range';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (rangeInput) {\n      formControlClass = formControlClass + \"-range\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes,\n      \"aria-invalid\": invalid\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;","// ** React Imports\r\nimport { Fragment, useState } from 'react'\r\n\r\n// ** Third Party Components\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nimport { Eye, EyeOff } from 'react-feather'\r\nimport { InputGroup, InputGroupAddon, Input, InputGroupText, Label, inputClassName } from 'reactstrap'\r\n\r\nconst InputPasswordToggle = props => {\r\n  // ** Props\r\n  const {\r\n    label,\r\n    hideIcon,\r\n    showIcon,\r\n    visible,\r\n    className,\r\n    htmlFor,\r\n    placeholder,\r\n    iconSize,\r\n    inputClassName,\r\n    ...rest\r\n  } = props\r\n\r\n  // ** State\r\n  const [inputVisibility, setInputVisibility] = useState(visible)\r\n\r\n  // ** Renders Icon Based On Visibility\r\n  const renderIcon = () => {\r\n    const size = iconSize ? iconSize : 14\r\n\r\n    if (inputVisibility === false) {\r\n      return hideIcon ? hideIcon : <Eye size={size} />\r\n    } else {\r\n      return showIcon ? showIcon : <EyeOff size={size} />\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {label ? <Label for={htmlFor}>{label}</Label> : null}\r\n      <InputGroup\r\n        className={classnames({\r\n          [className]: className\r\n        })}\r\n      >\r\n        <Input\r\n          type={inputVisibility === false ? 'password' : 'text'}\r\n          placeholder={placeholder ? placeholder : 'Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·Â·'}\r\n          className={classnames({\r\n            [inputClassName]: inputClassName\r\n          })}\r\n          /*eslint-disable */\r\n          {...(label && htmlFor\r\n            ? {\r\n                id: htmlFor\r\n              }\r\n            : {})}\r\n          {...rest}\r\n          /*eslint-enable */\r\n        />\r\n        <InputGroupAddon addonType='append' onClick={() => setInputVisibility(!inputVisibility)}>\r\n          <InputGroupText className='cursor-pointer'>{renderIcon()}</InputGroupText>\r\n        </InputGroupAddon>\r\n      </InputGroup>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default InputPasswordToggle\r\n\r\n// ** PropTypes\r\nInputPasswordToggle.propTypes = {\r\n  hideIcon: PropTypes.node,\r\n  showIcon: PropTypes.node,\r\n  visible: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  iconSize: PropTypes.number,\r\n  inputClassName: PropTypes.string,\r\n  label(props, propName, componentName) {\r\n    // ** If label is defined and htmlFor is undefined throw error\r\n    if (props[propName] && props['htmlFor'] === 'undefined') {\r\n      throw new Error('htmlFor prop is required when label prop is present')\r\n    }\r\n  },\r\n  htmlFor(props, propName, componentName) {\r\n    // ** If htmlFor is defined and label is undefined throw error\r\n    if (props[propName] && props['label'] === 'undefined') {\r\n      throw new Error('label prop is required when htmlFor prop is present')\r\n    }\r\n  }\r\n}\r\n\r\n// ** Default Props\r\nInputPasswordToggle.defaultProps = {\r\n  visible: false\r\n}\r\n"],"sourceRoot":""}