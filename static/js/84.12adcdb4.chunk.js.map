{"version":3,"sources":["views/marketing-banner/index.js","middleware/API.js","views/components/toastify/index.js"],"names":["langs","value","label","Banner","useState","modal","setModal","img","setImg","imgUpload","setImgUpload","lang","setLang","preview","setPreview","hitAPI","setHitAPI","id","setId","toggleModalPrimary","useEffect","getBanner","a","Action","get","res","data","_id","error","console","log","uppy","Uppy","meta","type","restrictions","maxNumberOfFiles","autoProceed","use","thumbnailGenerator","on","file","newData","FormData","append","postBanner","e","preventDefault","put","toast","success","title","text","className","defaultValue","options","style","width","onChange","responsive","src","baseURL","image","height","alt","name","inline","boolean","is_shown","updateVisible","currentTarget","checked","defaultChecked","color","size","caret","right","href","onClick","isOpen","toggle","modalClassName","sm","axios","create","SuccessToast","props","icon","role","ErrorToast"],"mappings":"mfAmBMA,EAAQ,CACZ,CACEC,MAAO,SACPC,MAAO,UAET,CACED,MAAO,UACPC,MAAO,YA4KIC,UAvKA,WACb,MAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,EAAsBF,mBAAS,MAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAAkCJ,mBAAS,MAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAwBN,mBAAS,UAAjC,mBAAOO,EAAP,KAAaC,EAAb,KACA,EAA8BR,oBAAS,GAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,GAA4BV,oBAAS,GAArC,qBAAOW,GAAP,MAAeC,GAAf,MACA,GAAoBZ,mBAAS,IAA7B,qBAAOa,GAAP,MAAWC,GAAX,MAGMC,GAAqB,SAAAF,GAEvBX,EADED,IAAUY,EACHA,EAEA,OAIbG,qBAAU,WACR,IAAMC,EAAS,uCAAG,8BAAAC,EAAA,sEACEC,IAAOC,IAAP,kBADF,OACVC,EADU,OAGhB,IACQC,EAAOD,EAAIC,KACjBlB,EAAOkB,EAAKA,KAAK,IACjBR,GAAMQ,EAAKA,KAAK,GAAGC,KACnB,MAAOC,GACPC,QAAQC,IAAIF,GARE,2CAAH,qDAYfP,MACC,CAACN,KAGJ,IAAMgB,GAAO,IAAIC,IAAK,CACpBC,KAAM,CAAEC,KAAM,UACdC,aAAc,CAAEC,iBAAkB,GAClCC,aAAa,IAGfN,GAAKO,IAAIC,KAETR,GAAKS,GAAG,uBAAuB,SAACC,EAAM5B,GACpCH,EAAa+B,EAAKf,MAClBZ,EAAWD,MAGb,IAAM6B,GAAU,IAAIC,SACpBD,GAAQE,OAAO,OAAQnC,GACvBiC,GAAQE,OAAO,OAAQjC,GAEvB,IAAMkC,GAAU,uCAAG,WAAOC,GAAP,SAAAxB,EAAA,6DACjBwB,EAAEC,iBACF/B,IAAU,GAFO,kBAITO,IAAOyB,IAAP,kBAAuB/B,IAAOyB,GAAS,IAJ9B,OAKf1B,IAAU,GACVV,EAAS,MACT2C,IAAMC,QAAQ,cAAC,IAAD,CAAcC,MAAM,UAAUC,KAAK,oCAPlC,kDAUfH,IAAMrB,MAAM,cAAC,IAAD,CAAYuB,MAAM,QAAQC,KAAO,2CAV9B,0DAAH,sDAuBhB,OACE,mCACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,+BAGA,cAAC,IAAD,CACEC,UAAU,yBACVC,aAAe3C,EACf4C,QAAUvD,EACVwD,MAAQ,CAAEC,MAAO,SACjBC,SAAW,SAACZ,GAAD,OAAOlC,EAAQkC,EAAE7C,UAE9B,eAAC,IAAD,CAAO0D,YAAU,EAAjB,UACE,gCACE,+BACE,sCACA,yCACA,sCACA,8CAGJ,gCACIpD,EAAM,+BACN,qCADM,IACO,mCAAK,qBAAKqD,IAAG,WAAQC,KAAR,OAAoBtD,EAAIuD,MAAxB,KAAoCL,MAAM,OAAOM,OAAO,MAAMC,IAAI,KAA/E,OACb,6BACE,cAAC,IAAD,CACEX,UAAU,sBACVnB,KAAK,SACLjB,GAAKA,GACLgD,KAAK,OACLC,QAAM,EACNR,SAAW,SAACZ,GAAD,OA3CP,SAACqB,GACrB,IACE5C,IAAOyB,IAAP,kBAAuB/B,IAAO,CAAEmD,SAAUD,GAAW,IACrDnD,IAAU,GACViC,IAAMC,QAAQ,cAAC,IAAD,CAAcC,MAAM,UAAUC,KAAK,0BAEjD,MAAOxB,GACPqB,IAAMrB,MAAM,cAAC,IAAD,CAAYuB,MAAM,QAAQC,KAAO,4CAoCbiB,CAAcvB,EAAEwB,cAAcC,UAChDC,eAAiBjE,EAAI6D,aAGzB,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAgBf,UAAU,sBAAsBoB,MAAM,cAAcC,KAAK,KAAKC,OAAK,EAAnF,SACE,cAAC,IAAD,CAAcD,KAAO,OAEvB,cAAC,IAAD,CAAcE,OAAK,EAAnB,SACE,eAAC,IAAD,CAAcC,KAAK,IAAIC,QAAU,SAAChC,GAChCA,EAAEC,iBACF5B,GAAmB,eAFrB,UAIE,cAAC,IAAD,CAAMkC,UAAU,QAAQqB,KAAO,KAJjC,KAI0C,sBAAMrB,UAAU,eAAhB,0BAI9C,eAAC,IAAD,CACE0B,OAAmB,eAAV1E,EACT2E,OAAS,kBAAM7D,GAAmB,eAClCkC,UAAU,wBACV4B,eAAe,gBAJjB,UAME,cAAC,IAAD,CAAaD,OAAS,kBAAM7D,GAAmB,eAA/C,kBACA,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAK+D,GAAG,KAAK7B,UAAU,OAAvB,UAGE,iDACA,cAAC,IAAD,CAAUtB,KAAOA,KACP,OAARxB,EAAe,qBAAK8C,UAAU,eAAeU,OAAS,IAAMH,IAAM/C,GAAoBgD,KAAO,OAAGtD,QAAH,IAAGA,OAAH,EAAGA,EAAKuD,OAAQE,IAAI,WAAc,cAMzI,cAAC,IAAD,UACE,sBAAKX,UAAU,SAAf,UACE,cAAC,IAAD,CAAQoB,MAAM,UAAUK,QAAU,SAAChC,GAAD,OAAOD,GAAWC,IAApD,oBAGE/B,GAAS,cAAC,IAAD,CAAS0D,MAAM,YAAe,YArBvC,oBA0BJ,mB,iCC5LtB,qBAEeU,QAAMC,OAAO,CACxBvB,QAAQ,2B,iCCJZ,iIAMawB,EAAe,SAACC,GAAD,OAC1B,eAAC,WAAD,WACE,qBAAKjC,UAAU,kBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,IAAD,CAAQqB,KAAK,KAAKD,MAAM,UAAUc,KAAM,cAAC,IAAD,CAAOb,KAAM,OACrD,oBAAIrB,UAAU,cAAd,2BAIJ,qBAAKA,UAAU,gBAAf,SACE,sBAAMmC,KAAK,MAAM,aAAW,aAA5B,SACGF,EAAMlC,aAOFqC,EAAa,SAACH,GAAD,OACxB,eAAC,WAAD,WACE,qBAAKjC,UAAU,kBAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,IAAD,CAAQqB,KAAK,KAAKD,MAAM,SAASc,KAAM,cAAC,IAAD,CAAGb,KAAM,OAChD,oBAAIrB,UAAU,cAAd,yBAIJ,qBAAKA,UAAU,gBAAf,SACE,sBAAMmC,KAAK,MAAM,aAAW,aAA5B,SACGF,EAAMlC,c","file":"static/js/84.12adcdb4.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport Uppy from '@uppy/core'\r\nimport thumbnailGenerator from '@uppy/thumbnail-generator'\r\nimport { DragDrop } from '@uppy/react'\r\nimport '../../@core/scss/react/libs/file-uploader/file-uploader.scss'\r\nimport 'uppy/dist/uppy.css'\r\nimport { MoreVertical, Edit } from 'react-feather'\r\nimport Select from 'react-select'\r\n//import toast types from components \r\nimport { SuccessToast, ErrorToast } from '../components/toastify'\r\n//import toasts from react\r\nimport { toast } from 'react-toastify'\r\nimport Action from '../../middleware/API'\r\nimport baseURL from '../../middleware/BaseURL'\r\n\r\n\r\nimport { Card, Spinner, Form, Row, CustomInput, Col, CardTitle, CardBody, Table, Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledDropdown, DropdownMenu, DropdownItem, DropdownToggle, Button } from 'reactstrap'\r\n\r\n\r\nconst langs = [\r\n  {\r\n    value: 'French',\r\n    label: 'French'\r\n  },\r\n  {\r\n    value: 'English',\r\n    label: 'English'\r\n  }\r\n\r\n\r\n]\r\nconst Banner = () => {\r\n  const [modal, setModal] = useState(null)\r\n  //file uploader\r\n  const [img, setImg] = useState(null)\r\n  const [imgUpload, setImgUpload] = useState(null)\r\n  const [lang, setLang] = useState('French')\r\n  const [preview, setPreview] = useState(false)\r\n  const [hitAPI, setHitAPI] = useState(false)\r\n  const [id, setId] = useState('')\r\n\r\n\r\n  const toggleModalPrimary = id => {\r\n    if (modal !== id) {\r\n      setModal(id)\r\n    } else {\r\n      setModal(null)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const getBanner = async () => {\r\n      const res = await Action.get(`/banner/market`)\r\n\r\n      try {\r\n        const data = res.data\r\n        setImg(data.data[0])\r\n        setId(data.data[0]._id)\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n\r\n    }\r\n    getBanner()\r\n  }, [hitAPI])\r\n\r\n\r\n  const uppy = new Uppy({\r\n    meta: { type: 'avatar' },\r\n    restrictions: { maxNumberOfFiles: 1 },\r\n    autoProceed: true\r\n  })\r\n\r\n  uppy.use(thumbnailGenerator)\r\n\r\n  uppy.on('thumbnail:generated', (file, preview) => {\r\n    setImgUpload(file.data)\r\n    setPreview(preview)\r\n  })\r\n\r\n  const newData = new FormData()\r\n  newData.append('file', imgUpload)\r\n  newData.append('lang', lang)\r\n  //post\r\n  const postBanner = async (e) => {\r\n    e.preventDefault()\r\n    setHitAPI(true)\r\n    try {\r\n      await Action.put(`/banner/${ id }`, newData, {})\r\n      setHitAPI(false)\r\n      setModal(null)\r\n      toast.success(<SuccessToast title=\"Success\" text=\"settings updated Successfully!\" />)\r\n\r\n    } catch (error) {\r\n      toast.error(<ErrorToast title=\"error\" text={ 'something went wrong, try again later' } />)\r\n    }\r\n  }\r\n  const updateVisible = (boolean) => {\r\n    try {\r\n      Action.put(`/banner/${ id }`, { is_shown: boolean }, {})\r\n      setHitAPI(false)\r\n      toast.success(<SuccessToast title=\"Success\" text=\"Visibility updated!!\" />)\r\n\r\n    } catch (error) {\r\n      toast.error(<ErrorToast title=\"error\" text={ 'something went wrong, try again later' } />)\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody>\r\n          <CardTitle>Marketing Banner\r\n\r\n          </CardTitle>\r\n          <Select\r\n            className='react-select my-2 w-25'\r\n            defaultValue={ lang }\r\n            options={ langs }\r\n            style={ { width: \"150px\" } }\r\n            onChange={ (e) => setLang(e.value) }\r\n          />\r\n          <Table responsive>\r\n            <thead>\r\n              <tr>\r\n                <th>S.No</th>\r\n                <th>Banners</th>\r\n                <th>Show</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              { img ? <tr>\r\n                <td>  1</td> <td> <img src={ ` ${ baseURL }${ img.image } ` } width=\"auto\" height=\"230\" alt=\"\" /> </td>\r\n                <td>\r\n                  <CustomInput\r\n                    className='custom-control-info'\r\n                    type='switch'\r\n                    id={ id }\r\n                    name='info'\r\n                    inline\r\n                    onChange={ (e) => updateVisible(e.currentTarget.checked) }\r\n                    defaultChecked={ img.is_shown }\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <UncontrolledDropdown>\r\n                    <DropdownToggle className='icon-btn hide-arrow' color='transparent' size='sm' caret>\r\n                      <MoreVertical size={ 15 } />\r\n                    </DropdownToggle>\r\n                    <DropdownMenu right>\r\n                      <DropdownItem href='/' onClick={ (e) => {\r\n                        e.preventDefault()\r\n                        toggleModalPrimary('jdITYDuwoi')\r\n                      } }>\r\n                        <Edit className='mr-50' size={ 15 } />  <span className='align-middle'>Edit</span>\r\n                      </DropdownItem>\r\n                    </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                  <Modal\r\n                    isOpen={ modal === 'jdITYDuwoi' }\r\n                    toggle={ () => toggleModalPrimary('jdITYDuwoi') }\r\n                    className='modal-dialog-centered'\r\n                    modalClassName=\"modal-primary\"\r\n                    key={ 'jdITYDuwoi' }>\r\n                    <ModalHeader toggle={ () => toggleModalPrimary('jdITYDuwoi') }>Edit</ModalHeader>\r\n                    <ModalBody>\r\n                      <Form>\r\n                        <Row>\r\n                          <Col sm='12' className=\"mt-2\">\r\n                            {/* basic image upload */ }\r\n\r\n                            <h6> Upload Banner </h6>\r\n                            <DragDrop uppy={ uppy } />\r\n                            { img !== null ? <img className='rounded mt-2' height={ 150 } src={ preview ? preview : baseURL + img?.image } alt='avatar' /> : null }\r\n                          </Col>\r\n\r\n                        </Row>\r\n                      </Form>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                      <div className='d-flex'>\r\n                        <Button color=\"primary\" onClick={ (e) => postBanner(e) }>\r\n                          Submit\r\n                        </Button>\r\n                        { hitAPI ? <Spinner color='primary' /> : null }\r\n                      </div>\r\n                    </ModalFooter>\r\n                  </Modal>\r\n                </td>\r\n              </tr> : null\r\n              }\r\n            </tbody>\r\n          </Table>\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\nexport default Banner\r\n","\r\nimport axios from 'axios'\r\n\r\nexport default axios.create({\r\n    baseURL: `http://localhost:4000`\r\n    // baseURL: `http://3.94.191.228:4000`\r\n    // baseURL: `https://nanyapp2.herokuapp.com`\r\n    // baseURL: `https://nanybackendforadmin.herokuapp.com`\r\n})","import { Fragment } from 'react'\nimport { toast } from 'react-toastify'\nimport Avatar from '@components/avatar'\nimport {Check, X, AlertTriangle, Info } from 'react-feather'\n\n//toast success\nexport const SuccessToast = (props) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>Success!</h6>\n      </div>\n      {/* <small className='text-muted'>11 Min Ago</small> */}\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        {props.text}\n      </span>\n    </div>\n  </Fragment>\n)\n\n//toast error\nexport const ErrorToast = (props) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='danger' icon={<X size={12} />} />\n        <h6 className='toast-title'>Error!</h6>\n      </div>\n      {/* <small className='text-muted'>11 Min Ago</small> */}\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        {props.text}\n      </span>\n    </div>\n  </Fragment>\n)\n\n//toast warning\nexport const WarningToast = (props) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='warning' icon={<AlertTriangle size={12} />} />\n        <h6 className='toast-title'>{props.title}</h6>\n      </div>\n      {/* <small className='text-muted'>11 Min Ago</small> */}\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        {props.text}\n      </span>\n    </div>\n  </Fragment>\n)\n\n//toast info\nexport const InfoToast = (props) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\n        <h6 className='toast-title'>{props.title}</h6>\n      </div>\n      {/* <small className='text-muted'>11 Min Ago</small> */}\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        {props.text}\n      </span>\n    </div>\n  </Fragment>\n) "],"sourceRoot":""}