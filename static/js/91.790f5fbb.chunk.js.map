{"version":3,"sources":["views/orders/preview/PreviewCard.js","views/orders/preview/index.js","middleware/API.js"],"names":["Subtotal","total","PreviewCard","data","products","map","product","i","price","quantity","Card","className","CardBody","Row","Col","md","src","Logo","width","invoiceid","createdAt","slice","CardText","name","email","address","mobile","Table","responsive","index","order","lg","InvoicePreview","id","useParams","useState","setData","useEffect","getSingleOrder","a","Action","get","xl","sm","axios","create","baseURL"],"mappings":"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","file":"static/js/91.790f5fbb.chunk.js","sourcesContent":["// ** Third Party Components\r\nimport { Card, CardBody, CardText, Row, Col, Table } from 'reactstrap'\r\nimport Logo from '@src/assets/images/logo/logo2.png'\r\nlet Subtotal = 0\r\nlet total = 0\r\nconst Discount = 20\r\nconst PreviewCard = ({ data }) => {\r\n\r\n  data.products.map((product, i) => {\r\n    total = 0\r\n    Subtotal += product.price * product.quantity\r\n    total += product.price * product.quantity\r\n    // data.products[i].totalQuantity = sum\r\n    data.products[i].total = total\r\n    //console.log(\"product index\", index, \"order index \", i, \"product price\", product.price, price)\r\n  })\r\n\r\n  return data !== null ? (\r\n    <Card className='invoice-preview-card'>\r\n      <CardBody className='invoice-padding pb-0'>\r\n        {/* Header */ }\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <div className='logo-wrapper'>\r\n              <img src={ Logo } width=\"170\" />\r\n            </div>\r\n          </Col>\r\n          <Col md=\"6\" className=\"text-right justify-ite\">\r\n            <div className='mt-md-0 mt-2'>\r\n              <h4 className='i'>\r\n                Invoice <span className='invoice-number'>#{ data?.invoiceid }</span>\r\n              </h4>\r\n              <div className='d-inline-flex'>\r\n                <p className='invoice-date-title'>Date Issued:</p>\r\n                <p className='ml-1 font-weight-bold'> { data?.createdAt.slice(0, 10) }</p>\r\n              </div>\r\n              {  /* <div className='invoice-date-wrapper'>\r\n              <p className='invoice-date-title'>Due Date:</p>\r\n              <p className='invoice-date'>data.invoice.dueDate</p>\r\n            </div> */}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mb-2\">\r\n          <Col md=\"8\">\r\n            <h6 className='mb-2'>Invoice From:</h6>\r\n            <h6 className='mb-25'>Care Inc</h6>\r\n            <CardText className='mb-25'>Office 149, 450 South Brand Brooklyn</CardText>\r\n            <CardText className='mb-25'>San Diego County, CA 91905, USA</CardText>\r\n            <CardText className='mb-0'>+1 (123) 456 7691, +44 (876) 543 2198</CardText>\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <h6 className='mb-2'>Invoice To:</h6>\r\n            <h6 className='mb-25'> { data?.name } </h6>\r\n            <CardText className='mb-25'> { data?.email } </CardText>\r\n            <CardText className='mb-25'> { data?.address } </CardText>\r\n            <CardText className='mb-25'> { data?.mobile } </CardText>\r\n          </Col>\r\n        </Row>\r\n\r\n        {/* /Header */ }\r\n      </CardBody>\r\n      {/* Invoice Description */ }\r\n      <Table responsive>\r\n        <thead>\r\n          <tr>\r\n            <th className='py-1'>#</th>\r\n            <th className='py-1'>Item</th>\r\n            <th className='py-1'>Price</th>\r\n            <th className='py-1'>Qty</th>\r\n            <th className='py-1'>Total</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          { data.products.map((products, index) => {\r\n            return (\r\n              <tr>\r\n                <td className='py-1' key={ products.product }>\r\n\r\n                  { index + 1 }\r\n                </td>\r\n                <td className='py-1'>\r\n                  <span className='font-weight-bold'>{ products.product }</span>\r\n                </td>\r\n                <td className='py-1'>\r\n                  <span className='font-weight-bold'>{ products.price }</span>\r\n                </td>\r\n                <td className='py-1'>\r\n                  <span className='font-weight-bold'>{ products.quantity }</span>\r\n                </td>\r\n                <td className='py-1'>\r\n                  <span className='font-weight-bold'>${ products.quantity * products.price }</span>\r\n                </td>\r\n              </tr>\r\n            )\r\n          }) }\r\n        </tbody>\r\n      </Table>\r\n      {/* /Invoice Description */ }\r\n\r\n      {/* Total & Sales Person */ }\r\n      <CardBody className='invoice-padding pb-2'>\r\n        <Row className='invoice-sales-total-wrapper'>\r\n          <Col className='d-flex justify-content-end' md='12' order={ { md: 2, lg: 1 } }>\r\n            <div className='invoice-total-wrapper'>\r\n              <div className='invoice-total-item'>\r\n                <p className='invoice-total-title'>Subtotal:</p>\r\n                <p className='invoice-total-amount'>${ Subtotal }</p>\r\n              </div>\r\n              <div className='invoice-total-item'>\r\n                <p className='invoice-total-title'>Discount:</p>\r\n                <p className='invoice-total-amount'>${ Discount }</p>\r\n              </div>\r\n              {/* <div className='invoice-total-item'>\r\n                <p className='invoice-total-title'>Tax:</p>\r\n                <p className='invoice-total-amount'>21%</p>\r\n              </div> */}\r\n              <hr className='my-50' />\r\n              <div className='invoice-total-item'>\r\n                <p className='invoice-total-title'>Total:</p>\r\n                <p className='invoice-total-amount'>${ Subtotal - Discount }</p>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n      {/* /Total & Sales Person */ }\r\n\r\n      {/* <hr className='invoice-spacing' /> */ }\r\n\r\n      {/* Invoice Note */ }\r\n      {/* <CardBody className='invoice-padding pt-0'>\r\n        <Row>\r\n          <Col sm='12'>\r\n            <span className='font-weight-bold'>Note: </span>\r\n            <span>\r\n              It was a pleasure working with you and your team. We hope you will keep us in mind for future freelance\r\n              projects. Thank You!\r\n            </span>\r\n          </Col>\r\n        </Row>\r\n      </CardBody> */}\r\n      {/* /Invoice Note */ }\r\n    </Card>\r\n  ) : null\r\n}\r\n\r\nexport default PreviewCard\r\n","import { useEffect, useState } from 'react'\r\nimport { useParams, Link } from 'react-router-dom'\r\n// ** Third Party Components\r\nimport axios from 'axios'\r\nimport { Row, Col, Alert } from 'reactstrap'\r\n\r\n// ** Invoice Preview Components\r\nimport PreviewCard from './PreviewCard'\r\nimport PreviewActions from './PreviewActions'\r\nimport Action from '../../../middleware/API'\r\nimport baseURL from '../../../middleware/BaseURL'\r\n\r\n\r\n// ** Styles\r\nimport '@styles/base/pages/app-invoice.scss'\r\n\r\nconst InvoicePreview = () => {\r\n  // ** Vars\r\n  const { id } = useParams()\r\n\r\n  // ** States\r\n  const [data, setData] = useState(null)\r\n\r\n  // ** Get invoice on mount based on id\r\n  useEffect(() => {\r\n    const getSingleOrder = async () => {\r\n      const { data } = await Action.get(`/order?_id=${ id }`)\r\n      setData(data.data[0])\r\n    }\r\n    getSingleOrder()\r\n  }, [])\r\n\r\n  return data !== null ? (\r\n    <div className='invoice-preview-wrapper'>\r\n      <Row className='invoice-preview'>\r\n        <Col xl={ 12 } md={ 12 } sm={ 12 }>\r\n          <PreviewCard data={ data } />\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  ) : (\r\n    <div>\r\n      loading...\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default InvoicePreview\r\n","\r\nimport axios from 'axios'\r\n\r\nexport default axios.create({\r\n    baseURL: `http://localhost:4000`\r\n    // baseURL: `http://3.94.191.228:4000`\r\n    // baseURL: `https://nanyapp2.herokuapp.com`\r\n    // baseURL: `https://nanybackendforadmin.herokuapp.com`\r\n})"],"sourceRoot":""}