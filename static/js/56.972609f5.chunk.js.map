{"version":3,"sources":["views/pages/account-settings/Tabs.js","views/pages/account-settings/GeneralTabContent.js","views/pages/account-settings/PasswordTabContent.js","views/pages/account-settings/index.js","middleware/API.js","views/components/toastify/index.js","@core/components/breadcrumbs/index.js"],"names":["Tabs","activeTab","toggleTab","Nav","className","pills","vertical","NavItem","NavLink","active","onClick","size","GeneralTabs","value","setValue","onSubmit","loading","Row","Col","sm","FormGroup","Label","for","Input","type","id","placeholder","name","autoFocus","onChange","e","target","email","Button","Ripple","color","handleSubmit","Spinner","PasswordTabContent","passwords","setPasswords","Form","newPassword","confirmPassword","AccountSettings","useState","setActiveTab","data","setData","setLoading","useEffect","a","userData","JSON","parse","localStorage","getItem","Action","get","usertype","_id","preventDefault","put","res","console","log","success","toast","title","text","error","message","post","password","confirmpassword","breadCrumbTitle","breadCrumbParent","breadCrumbActive","md","tab","Card","CardBody","TabContent","TabPane","tabId","GeneralTabContent","axios","create","baseURL","SuccessToast","props","icon","role","ErrorToast","BreadCrumbs","breadCrumbParent2","breadCrumbParent3","tag","to"],"mappings":"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","file":"static/js/56.972609f5.chunk.js","sourcesContent":["import { Nav, NavItem, NavLink } from 'reactstrap'\r\nimport { User, Lock} from 'react-feather'\r\n\r\nconst Tabs = ({ activeTab, toggleTab }) => {\r\n  return (\r\n    <Nav className='nav-left' pills vertical>\r\n      <NavItem>\r\n        <NavLink active={activeTab === '1'} onClick={() => toggleTab('1')}>\r\n          <User size={18} className='mr-1' />\r\n          <span className='font-weight-bold'>Profile</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink active={activeTab === '2'} onClick={() => toggleTab('2')}>\r\n          <Lock size={18} className='mr-1' />\r\n          <span className='font-weight-bold'>Change Password</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      {/* <NavItem>\r\n        <NavLink active={activeTab === '3'} onClick={() => toggleTab('3')}>\r\n          <Info size={18} className='mr-1' />\r\n          <span className='font-weight-bold'>Information</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink active={activeTab === '4'} onClick={() => toggleTab('4')}>\r\n          <Link size={18} className='mr-1' />\r\n          <span className='font-weight-bold'>Social</span>\r\n        </NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink active={activeTab === '5'} onClick={() => toggleTab('5')}>\r\n          <Bell size={18} className='mr-1' />\r\n          <span className='font-weight-bold'>Notifications</span>\r\n        </NavLink>\r\n      </NavItem> */}\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default Tabs\r\n","import { Fragment, useState } from 'react'\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport { Button, Media, Label, Row, Col, Input, FormGroup, Spinner, Form } from 'reactstrap'\r\nimport baseURL from '@src/middleware/BaseURL'\r\n\r\nconst GeneralTabs = ({ value, setValue, onSubmit, loading }) => {\r\n  const handleSubmit = e => onSubmit(e)\r\n  return (\r\n    <Fragment>\r\n\r\n      <Row>\r\n\r\n        <Col sm='12'>\r\n          <FormGroup>\r\n            <Label for='name'>Name</Label>\r\n            <Input type='text' id='login-email' placeholder='John' value={ value.name } autoFocus onChange={ (e) => setValue({ ...value, name: e.target.value }) } />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col sm='12'>\r\n          <FormGroup>\r\n            <Label for='email'>Email</Label>\r\n            <Input type='email' id='login-email' placeholder='john@example.com' value={ value.email } autoFocus onChange={ (e) => setValue({ ...value, email: e.target.value }) } />\r\n\r\n          </FormGroup>\r\n        </Col>\r\n        <Col className='mt-2' sm='12'>\r\n          <Button.Ripple type='submit' className='mr-1' color='primary' onClick={ (e) => handleSubmit(e) }\r\n          >\r\n            Save changes\r\n            { loading ? <Spinner color='light' size=\"sm\" className=\"mx-1\" /> : null }\r\n          </Button.Ripple>\r\n\r\n        </Col>\r\n      </Row>\r\n    </Fragment >\r\n  )\r\n}\r\n\r\nexport default GeneralTabs\r\n","import * as yup from 'yup'\r\nimport classnames from 'classnames'\r\nimport { useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport { Form, FormGroup, Row, Col, Button, Input, Spinner } from 'reactstrap'\r\n\r\nconst PasswordTabContent = ({ passwords, setPasswords, handleSubmit, loading }) => {\r\n\r\n  return (\r\n    <Form onSubmit={ (e) => handleSubmit(e) }>\r\n      <Row>\r\n        <Col sm='12'>\r\n          <FormGroup>\r\n            <Input type='password' placeholder='********' autoFocus />\r\n\r\n          </FormGroup>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col sm='6'>\r\n          <FormGroup>\r\n            <Input type='password' placeholder='********' value={ passwords.newPassword } autoFocus onChange={ (e) => setPasswords({ ...passwords, newPassword: e.target.value }) } />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col sm='6'>\r\n          <FormGroup>\r\n            <Input type='password' placeholder='********' value={ passwords.confirmPassword } autoFocus onChange={ (e) => setPasswords({ ...passwords, confirmPassword: e.target.value }) } />\r\n          </FormGroup>\r\n        </Col>\r\n        <Col className='mt-1' sm='12'>\r\n          <Button.Ripple type='submit' className='mr-1' color='primary'>\r\n            Save changes\r\n            { loading ? <Spinner color='light' size=\"sm\" className=\"mx-1\" /> : null }\r\n          </Button.Ripple>\r\n\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default PasswordTabContent","import { Fragment, useState, useEffect } from 'react'\nimport Tabs from './Tabs'\nimport Breadcrumbs from '@components/breadcrumbs'\nimport GeneralTabContent from './GeneralTabContent'\nimport PasswordTabContent from './PasswordTabContent'\nimport { Row, Col, TabContent, TabPane, Card, CardBody } from 'reactstrap'\nimport Action from '@src/middleware/API'\n\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\nimport '@styles/react/pages/page-account-settings.scss'\n//import toast types from components\nimport { SuccessToast, ErrorToast } from '../../components/toastify'\n//import toasts from react\nimport { toast } from 'react-toastify'\nconst AccountSettings = () => {\n  const [activeTab, setActiveTab] = useState('1'),\n    [data, setData] = useState(null)\n\n  const toggleTab = tab => {\n    setActiveTab(tab)\n  }\n  const [value, setValue] = useState({\n    name: '',\n    email: ''\n  })\n  const [passwords, setPasswords] = useState({\n    newPassword: '',\n    confirmPassword: ''\n  })\n  const [loading, setLoading] = useState(false)\n  useEffect(async () => {\n    const userData = JSON.parse(localStorage.getItem('userData'))\n    const { data } = await Action.get(`/auth/${ userData.data.usertype }?_id=${ userData.data._id }`)\n    setValue({\n      name: data.data[0].name,\n      email: data.data[0].email\n    })\n    setData(userData.data)\n\n  }, [])\n  const onSubmit = async (e) => {\n    setLoading(true)\n    e.preventDefault()\n    const res = await Action.put(`/auth/updateprofile/${ data._id }`, {\n      name: value.name,\n      email: value.email\n    })\n    console.log(res)\n    if (res.data.success) {\n      toast.success(<SuccessToast title=\"Success\" text=\"user profile updated Successfully!\" />)\n      setLoading(false)\n    } else {\n      setLoading(false)\n      toast.error(<ErrorToast title=\"error\" text={ res.data.message } />)\n    }\n  }\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    setLoading(true)\n    const res = await Action.post(`auth/resetpassword`, {\n      email: data.email,\n      password: passwords.newPassword,\n      confirmpassword: passwords.confirmPassword\n    })\n    console.log(res)\n    if (res.data.success) {\n      setLoading(false)\n      toast.success(<SuccessToast title=\"Success\" text={ res.data.message } />)\n    } else {\n      setLoading(false)\n      toast.error(<ErrorToast title=\"error\" text={ res.data.message } />)\n\n    }\n\n  }\n  return (\n    <Fragment>\n      <Breadcrumbs breadCrumbTitle='Account Settings' breadCrumbParent='Pages' breadCrumbActive='Account Settings' />\n      { value !== null ? (\n        <Row>\n          <Col className='mb-2 mb-md-0' md='3'>\n            <Tabs activeTab={ activeTab } toggleTab={ toggleTab } />\n          </Col>\n          <Col md='9'>\n            <Card>\n              <CardBody>\n                <TabContent activeTab={ activeTab }>\n                  <TabPane tabId='1'>\n                    <GeneralTabContent loading={ loading } setValue={ setValue } onSubmit={ onSubmit } value={ value } />\n                  </TabPane>\n                  <TabPane tabId='2'>\n                    <PasswordTabContent handleSubmit={ handleSubmit } passwords={ passwords } setPasswords={ setPasswords } loading={ loading } />\n                  </TabPane>\n                  {/*  <TabPane tabId='3'>\n                    <InfoTabContent data={data.info} />\n                  </TabPane>\n                  <TabPane tabId='4'>\n                    <SocialTabContent data={data.social} />\n                  </TabPane>\n                  <TabPane tabId='5'>\n                    <NotificationsTabContent data={data.notification} />\n                  </TabPane> */}\n                </TabContent>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      ) : null }\n    </Fragment>\n  )\n}\n\nexport default AccountSettings\n","\r\nimport axios from 'axios'\r\n\r\nexport default axios.create({\r\n    baseURL: `http://localhost:4000`\r\n    // baseURL: `http://3.94.191.228:4000`\r\n    // baseURL: `https://nanyapp2.herokuapp.com`\r\n    // baseURL: `https://nanybackendforadmin.herokuapp.com`\r\n})","import { Fragment } from 'react'\nimport { toast } from 'react-toastify'\nimport Avatar from '@components/avatar'\nimport {Check, X, AlertTriangle, Info } from 'react-feather'\n\n//toast success\nexport const SuccessToast = (props) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>Success!</h6>\n      </div>\n      {/* <small className='text-muted'>11 Min Ago</small> */}\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        {props.text}\n      </span>\n    </div>\n  </Fragment>\n)\n\n//toast error\nexport const ErrorToast = (props) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='danger' icon={<X size={12} />} />\n        <h6 className='toast-title'>Error!</h6>\n      </div>\n      {/* <small className='text-muted'>11 Min Ago</small> */}\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        {props.text}\n      </span>\n    </div>\n  </Fragment>\n)\n\n//toast warning\nexport const WarningToast = (props) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='warning' icon={<AlertTriangle size={12} />} />\n        <h6 className='toast-title'>{props.title}</h6>\n      </div>\n      {/* <small className='text-muted'>11 Min Ago</small> */}\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        {props.text}\n      </span>\n    </div>\n  </Fragment>\n)\n\n//toast info\nexport const InfoToast = (props) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\n        <h6 className='toast-title'>{props.title}</h6>\n      </div>\n      {/* <small className='text-muted'>11 Min Ago</small> */}\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        {props.text}\n      </span>\n    </div>\n  </Fragment>\n) ","// ** React Imports\nimport { Link } from 'react-router-dom'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport { Grid, CheckSquare, MessageSquare, Mail, Calendar } from 'react-feather'\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  UncontrolledButtonDropdown,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle\n} from 'reactstrap'\n\nconst BreadCrumbs = props => {\n  // ** Props\n  const { breadCrumbTitle, breadCrumbParent, breadCrumbParent2, breadCrumbParent3, breadCrumbActive } = props\n\n  return (\n    <div className='content-header row'>\n      <div className='content-header-left col-md-9 col-12 mb-2'>\n        <div className='row breadcrumbs-top'>\n          <div className='col-12'>\n            {breadCrumbTitle ? <h2 className='content-header-title float-left mb-0'>{breadCrumbTitle}</h2> : ''}\n            <div className='breadcrumb-wrapper vs-breadcrumbs d-sm-block d-none col-12'>\n              <Breadcrumb>\n                <BreadcrumbItem tag='li'>\n                  <Link to='/'>Home</Link>\n                </BreadcrumbItem>\n                <BreadcrumbItem tag='li' className='text-primary'>\n                  {breadCrumbParent}\n                </BreadcrumbItem>\n                {breadCrumbParent2 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent2}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                {breadCrumbParent3 ? (\n                  <BreadcrumbItem tag='li' className='text-primary'>\n                    {breadCrumbParent3}\n                  </BreadcrumbItem>\n                ) : (\n                  ''\n                )}\n                <BreadcrumbItem tag='li' active>\n                  {breadCrumbActive}\n                </BreadcrumbItem>\n              </Breadcrumb>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* <div className='content-header-right text-md-right col-md-3 col-12 d-md-block d-none'>\n        <div className='form-group breadcrum-right dropdown'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle color='primary' size='sm' className='btn-icon btn-round dropdown-toggle'>\n              <Grid size={14} />\n            </DropdownToggle>\n            <DropdownMenu tag='ul' right>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <CheckSquare className='mr-1' size={14} />\n                <span className='align-middle'>Todo</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/chat'>\n                <MessageSquare className='mr-1' size={14} />\n                <span className='align-middle'>Chat</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/email'>\n                <Mail className='mr-1' size={14} />\n                <span className='align-middle'>Email</span>\n              </DropdownItem>\n              <DropdownItem tag={Link} to='/apps/calendar'>\n                <Calendar className='mr-1' size={14} />\n                <span className='align-middle'>Calendar</span>\n              </DropdownItem>\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n        </div>\n      </div>*/}\n    </div> \n  )\n}\nexport default BreadCrumbs\n\n// ** PropTypes\nBreadCrumbs.propTypes = {\n  breadCrumbTitle: Proptypes.string.isRequired,\n  breadCrumbActive: Proptypes.string.isRequired\n}\n"],"sourceRoot":""}