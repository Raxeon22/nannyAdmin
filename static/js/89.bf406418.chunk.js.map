{"version":3,"sources":["views/services/List.js","middleware/API.js","views/components/toastify/index.js","views/components/pagination/PaginationBasic.js"],"names":["ServiceTable","useState","allServices","setAllServices","fetchServiceData","a","Action","get","response","data","success","modal","setModal","useEffect","map","value","toggleModal","id","deleteService","delete","toast","title","text","error","currentPage","setCurrentPage","dataPerPage","indexOfLastPage","indexOfFirstPage","currentData","slice","totalPages","length","responsive","index","heading","src","baseURL","image","height","width","alt","className","color","size","caret","right","to","_id","href","onClick","e","preventDefault","isOpen","toggle","modalClassName","Paginate","pageNumber","axios","create","SuccessToast","props","icon","role","ErrorToast","PaginationBasic","i","Math","ceil","push","number"],"mappings":"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","file":"static/js/89.bf406418.chunk.js","sourcesContent":["import { useEffect, useState, useContext } from 'react'\r\nimport Pagination from '@src/views/components/pagination/PaginationBasic'\r\nimport { Card, CardTitle, CardBody, Table, Modal, ModalHeader, ModalBody, ModalFooter, UncontrolledDropdown, DropdownMenu, DropdownItem, DropdownToggle, Button } from 'reactstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { MoreVertical, Edit, Trash } from 'react-feather'\r\nimport Action from '../../middleware/API'\r\nimport baseURL from '../../middleware/BaseURL'\r\n\r\n//import toast types from components \r\nimport { SuccessToast, ErrorToast } from '../components/toastify'\r\n//import toasts from react\r\nimport { toast } from 'react-toastify'\r\n\r\nconst ServiceTable = () => {\r\n  //GET DATA\r\n  const [allServices, setAllServices] = useState([])\r\n  async function fetchServiceData() {\r\n    const response = await Action.get('/Service', {})\r\n    if (response.data.success === true) {\r\n      setAllServices(response.data.data)\r\n    }\r\n  }\r\n  const [modal, setModal] = useState(null)\r\n\r\n  useEffect(async () => {\r\n    fetchServiceData()\r\n    allServices.map((value) => {\r\n    })\r\n  }, [modal])\r\n\r\n\r\n  const toggleModal = id => {\r\n    if (modal !== id) {\r\n      setModal(id)\r\n    } else {\r\n      setModal(null)\r\n    }\r\n  }\r\n  //delete api \r\n  const deleteService = async (id) => {\r\n    const res = await Action.delete(`/service?id=${ id }`)\r\n\r\n    if (res.data.success) {\r\n      toast.success(<SuccessToast title=\"Success\" text=\"Service Deleted Successfully!\" />)\r\n      setModal(null)\r\n    } else {\r\n      toast.error(<ErrorToast title=\"error\" text=\"Something went wrong, try again later\" />)\r\n    }\r\n  }\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [dataPerPage, setDataPerPage] = useState(5)\r\n  //setting pages into the pagination\r\n  const indexOfLastPage = currentPage * dataPerPage//5\r\n  const indexOfFirstPage = indexOfLastPage - dataPerPage //0\r\n\r\n  const currentData = allServices.slice(indexOfFirstPage, indexOfLastPage)\r\n  const totalPages = allServices.length //15\r\n\r\n  //change pages onclick \r\n  const Paginate = (pageNumber) => { setCurrentPage(pageNumber) }\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <CardTitle>All Services</CardTitle>\r\n\r\n        <Table responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>S.no</th>\r\n              <th>Service Name</th>\r\n              <th>Image</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {\r\n              allServices.length ? currentData.map((value, index) => {\r\n                return (\r\n                  <tr key={ index }>\r\n                    <td>{ index + 1 }</td>\r\n                    <td>{ value.heading }</td>\r\n                    <td>\r\n                      <img src={ baseURL + value.image } height=\"50\" width=\"50\" alt=\"\" />\r\n                    </td>\r\n                    <td>\r\n                      <UncontrolledDropdown>\r\n                        <DropdownToggle className='icon-btn hide-arrow' color='transparent' size='sm' caret>\r\n                          <MoreVertical size={ 15 } />\r\n                        </DropdownToggle>\r\n                        <DropdownMenu right>\r\n                          <Link to={ `/services/edit/${ value._id }` }>\r\n                            <DropdownItem href='/' >\r\n                              <Edit className='mr-50' size={ 15 } />  <span className='align-middle'>Edit</span>\r\n                            </DropdownItem>\r\n                          </Link>\r\n\r\n                          <DropdownItem href='/' onClick={ (e) => {\r\n                            e.preventDefault()\r\n                            toggleModal(value._id)\r\n                          } }>\r\n                            <Trash className='mr-50' size={ 15 } /> <span className='align-middle'>Delete</span>\r\n                          </DropdownItem>\r\n                        </DropdownMenu>\r\n                      </UncontrolledDropdown>\r\n                      <Modal\r\n                        isOpen={ modal === value._id }\r\n                        toggle={ () => toggleModal(value.id) }\r\n                        className='modal-dialog-centered'\r\n                        modalClassName=\"modal-danger\"\r\n                        key={ value.id }>\r\n                        <ModalHeader toggle={ () => toggleModal(value._id) }>Delete</ModalHeader>\r\n                        <ModalBody>\r\n                          Are you sure you want to delete this?\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                          <Button color=\"danger\" onClick={ () => deleteService(value._id) }>\r\n                            delete\r\n                          </Button>\r\n                        </ModalFooter>\r\n                      </Modal>\r\n                    </td>\r\n                  </tr>\r\n                )\r\n              }) : null\r\n            }\r\n\r\n\r\n          </tbody>\r\n        </Table>\r\n        {\r\n          totalPages > dataPerPage ? <Pagination dataPerPage={ dataPerPage } currentPage={ currentPage } Paginate={ Paginate } totalPages={ totalPages } /> : null\r\n        }\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ServiceTable\r\n","\r\nimport axios from 'axios'\r\n\r\nexport default axios.create({\r\n    // baseURL: `http://localhost:4000`\r\n    // baseURL: `http://3.94.191.228:4000`\r\n    // baseURL: `https://nanyapp2.herokuapp.com`\r\n    baseURL: `https://nanybackendforadmin.herokuapp.com`\r\n})","import { Fragment } from 'react'\nimport { toast } from 'react-toastify'\nimport Avatar from '@components/avatar'\nimport {Check, X, AlertTriangle, Info } from 'react-feather'\n\n//toast success\nexport const SuccessToast = (props) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='success' icon={<Check size={12} />} />\n        <h6 className='toast-title'>Success!</h6>\n      </div>\n      {/* <small className='text-muted'>11 Min Ago</small> */}\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        {props.text}\n      </span>\n    </div>\n  </Fragment>\n)\n\n//toast error\nexport const ErrorToast = (props) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='danger' icon={<X size={12} />} />\n        <h6 className='toast-title'>Error!</h6>\n      </div>\n      {/* <small className='text-muted'>11 Min Ago</small> */}\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        {props.text}\n      </span>\n    </div>\n  </Fragment>\n)\n\n//toast warning\nexport const WarningToast = (props) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='warning' icon={<AlertTriangle size={12} />} />\n        <h6 className='toast-title'>{props.title}</h6>\n      </div>\n      {/* <small className='text-muted'>11 Min Ago</small> */}\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        {props.text}\n      </span>\n    </div>\n  </Fragment>\n)\n\n//toast info\nexport const InfoToast = (props) => (\n  <Fragment>\n    <div className='toastify-header'>\n      <div className='title-wrapper'>\n        <Avatar size='sm' color='info' icon={<Info size={12} />} />\n        <h6 className='toast-title'>{props.title}</h6>\n      </div>\n      {/* <small className='text-muted'>11 Min Ago</small> */}\n    </div>\n    <div className='toastify-body'>\n      <span role='img' aria-label='toast-text'>\n        {props.text}\n      </span>\n    </div>\n  </Fragment>\n) ","import { Pagination, PaginationItem, PaginationLink } from 'reactstrap'\r\n\r\nconst PaginationBasic = ({ dataPerPage, Paginate, totalPages, currentPage }) => {\r\n  const pageNumber = []\r\n  for (let i = 1; i <= Math.ceil(totalPages / dataPerPage); i++) {\r\n    pageNumber.push(i)\r\n  }\r\n  return (\r\n    <Pagination className='d-flex mt-3 mr-2 justify-content-end'>\r\n      { pageNumber.length ? pageNumber.map((number, index) => {\r\n        return (\r\n          <PaginationItem onClick={ () => Paginate(number) } className={ currentPage === number ? \"active\" : \"\" } >\r\n            <PaginationLink href='#' key={ index }>{ number }</PaginationLink>\r\n          </PaginationItem>\r\n        )\r\n      }) : null }\r\n    </Pagination>\r\n  )\r\n}\r\nexport default PaginationBasic\r\n"],"sourceRoot":""}